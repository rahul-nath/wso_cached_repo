<div class="article">
  <section><article>

    <p class="intro-paragraph">The <acronym title="Williams Students Online">WSO</acronym> Facebook<a href="#fn__1" name="fnt__1" id="fnt__1" class="fn_top" onmouseover="fnt('1', this, event);"><sup>1</sup></a> is an online campus directory. It is accessible on campus without login and off campus by logging in with your <acronym title="Office for Information Technology">OIT</acronym> (Unix ID) username and password. Please report any strange behavior (after looking over the info below) to <code>wso-dev</code> <code>[at]</code> <code>wso.williams.edu</code>. The more descriptive your bug reports are, the easier the bug is to fix. Better yet, come to a meeting (join the <a href="http://wso.williams.edu/mailman/listinfo/wso-staff" class="urlextern" title="http://wso.williams.edu/mailman/listinfo/wso-staff"  rel="nofollow">wso-staff</a> list) and help out!</p>
    <br>

    <h3>Quick syntax guide for searching</h3>
    <table class="inline">
      <tr>
	<th> Query </th><th> Meaning </th>
      </tr>
      <tr>
	<td class="code">Ephraim</td><td> all people whose profiles contain the string &ldquo;ephraim&rdquo; (case-insensitive) </td>
      </tr>
      <tr>
	<td class="code">Ephraim Williams</td><td> (intersection) all people who match <strong>both</strong> &ldquo;ephraim&rdquo; <strong>and</strong> &ldquo;williams&rdquo; </td>
      </tr>
      <tr>
	<td class="code">Ephraim &amp; Williams</td><td> (intersection) all people who match <strong>both</strong> &ldquo;ephraim&rdquo; <strong>and</strong> &ldquo;williams&rdquo; </td>
      </tr>
      <tr>
	<td class="code">Ephraim, Hopkins</td><td> (union) all people who match &ldquo;ephraim&rdquo; <strong>plus</strong> all people who match &ldquo;hopkins&rdquo; </td>
      </tr>
      <tr>
	<td class="code">Ephraim | Hopkins</td><td> (union) all people who match &ldquo;ephraim&rdquo; <strong>plus</strong> all people who match &ldquo;hopkins&rdquo; </td>
      </tr>
      <tr>
	<td class="code">Ephraim Williams, Mark Hopkins</td><td> all people who match &ldquo;ephraim&rdquo; <em>and</em> &ldquo;williams&rdquo; <strong>plus</strong> all people who match &ldquo;mark&rdquo; <em>and</em> &ldquo;hopkins&rdquo; </td>
      </tr>
      <tr>
	<td class="code">Ephraim, Hopkins &amp; Thompson, Griffin</td><td> all people who match &ldquo;ephraim&rdquo; <strong>plus</strong> all people who match &ldquo;hopkins&rdquo; <em>and</em> &ldquo;thompson&rdquo; <strong>plus</strong> all people who match &ldquo;griffin&rdquo; </td>
      </tr>
      <tr>
	<td class="code">(Ephraim, Hopkins) &amp; (Thompson, Griffin)</td><td> all people who match &ldquo;ephraim&rdquo; <em>or</em> &ldquo;hopkins&rdquo; <strong>and</strong> also match &ldquo;thompson&rdquo; <em>or</em> &ldquo;griffin&rdquo; </td>
      </tr>
      <tr>
	<td class="code">name: Ephraim</td><td> all people whose names match &ldquo;ephraim&rdquo; </td>
      </tr>
      <tr>
	<td class="code">name: (Ephraim, Hopkins)</td><td> all people whose names match &ldquo;ephraim&rdquo; <strong>plus</strong> all people whose names match &ldquo;hopkins&rdquo; </td>
      </tr>
      <tr>
	<td class="code">dorm: &ldquo;Mark Hopkins&rdquo;</td><td> all people whose dorm matches &ldquo;mark hopkins&rdquo; </td>
      </tr>
    </table>
    
    <p>Parentheses can be nested to any depth. Labels cannot be nested. It doesn&rsquo;t make sense to search only within the dorm field when already searching only within the name field, for example.</p>
    <br>
    
    <h3>Search tutorial</h3>
    <p>To search for people in the Facebook, you can enter search terms to be matched in any part of their profiles. For example, searching for <code>Williams</code> yields everyone who lives in Williams Hall, all students from Williamstown (or any other town with &ldquo;Williams&rdquo; in its name), anyone with &ldquo;Williams&rdquo; in their name, etc.</p>
    <br>
    
    <h4>Combining search terms</h4>
    <p>Single-word searches are pretty boring and often yield more results than you want. You can combine multiple search terms to create more powerful queries. The simplest way to do this is to separate search terms by space as you would in an internet search. For example, to search for the Ephraim Williams (as there are so many of them) who lives in Dodd, we would use the query</p>
    <pre class="code">Ephraim Williams Dodd</pre>
    <p>or</p>
    <pre class="code">Ephraim &amp; Williams &amp; Dodd</pre>
    <p>Let&rsquo;s say we want a list of people living in the frosh quad. Alas, searching for <code>frosh quad</code> won&rsquo;t do it, but neither will <code>Williams Sage</code> or <code>Williams &amp; Sage</code>. What we want is </p>
    <pre class="code">Williams, Sage</pre>
    <p>or</p>
    <pre class="code">Williams | Sage</pre>
    <p>These will both yield all people who match &ldquo;Williams&rdquo; or &ldquo;Sage&rdquo;, or in other words, everyone who matches &ldquo;Williams&rdquo; plus everyone who matches &ldquo;Sage.&rdquo;</p>
    <p>You can surround any of these operators (&ldquo;&rdquo;, &ldquo;<code>&amp;</code>&rdquo;, &ldquo;<code>,</code>&rdquo;, &ldquo;<code>|</code>&rdquo;) with any number of spaces. Extra spaces will not change their meaning.</p>
    <br>
    
    <h4>Quotes</h4>
    <p>One problem you may see with all this is that it could be hard to search precisely for multi-word terms like &ldquo;San Francisco&rdquo; or &ldquo;Mark Hopkins.&rdquo; In reality, it&rsquo;s not often an issue, but in some cases we just don&rsquo;t want as results everyone matching &ldquo;Mark&rdquo; and &ldquo;Hopkins,&rdquo; but rather &ldquo;Mark Hopkins&rdquo; literally. In those cases you can use what probably seems the obvious approach: quotes. A search for <code>&ldquo;Mark Hopkins&rdquo;</code> does the trick.</p>
    <br>
    
    <h4>Labels</h4>
    <p>Another shortcoming of matching each search term against any part of a person&rsquo;s profile is that some searches, like finding someone named William who lives in... Williams Hall, are pretty much impossible. Luckily, we have labels to help narrow a search. For our hypothetical William of Williams Hall, we would use the following query:</p>
    <pre class="code">name:William &amp; dorm:Williams</pre>
    <p>It&rsquo;s quite likely that you could guess the right label name for the job, but here is a list of labels are currently supported.</p>
    <table class="inline">
      <tr>
	<th> Label </th><th> Searches by </th><th> Pertains to </th>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">building:</pre><p>,&nbsp;</p><pre class="code">bldg:</pre><p>, or&nbsp;</p><pre class="code">dorm:</pre> </td><td> dorm (students) or building (faculty, staff) </td><td> everyone </td>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">city:</pre><p>&nbsp;or&nbsp;</p><pre class="code">town:</pre></td><td> hometown </td><td> students </td>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">class:</pre><p>&nbsp;or&nbsp;</p><pre class="code">year:</pre></td><td> class year </td><td> students </td>
      </tr>
      <tr>
	<td class="code">country:</td><td> home country </td><td> students </td>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">dept:</pre><p>&nbsp;or&nbsp;</p><pre class="code">department:</pre></td><td> department </td><td> faculty, staff </td>
      </tr>
      <tr>
	<td class="code"> <code>email:</code> </td><td> <em>First.M.Last</em> style email </td><td> everyone </td>
      </tr>
      <tr>
	<td class="code"> <code>entry:</code> </td><td> dorm entry letter or number </td><td> students </td>
      </tr>
	<td class="code"> <code>major:</code> </td><td> major (abbreviation) </td><td> students </td>
      </tr>
      <tr>
	<td class="code"> <code>name:</code> </td><td> name </td><td> everyone </td>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">neighborhood:</pre><p>&nbsp;or&nbsp;</p><pre class="code">cluster:</pre></td><td> campus neighborhood </td><td> students </td>
      </tr>
      <tr>
	<td class="inline-display-text"><pre class="code">phone:</pre><p>&nbsp;or&nbsp;</p><pre class="code">ext:</pre> </td><td> campus phone number </td><td> everyone </td>
      </tr>
      <tr>
	<td class="code"> <code>room:</code> </td><td> room number </td><td> students</td>
      </tr>
      <tr>
	<td class="code"> <code>state:</code> </td><td> home state </td><td> students </td>
      </tr>
      <tr>
	<td class="code"> <code>title:</code> </td><td> title </td><td> faculty, staff </td>
      </tr>
      <tr>
        <td class="code"> <code>unix:</code> </td><td> Unix ID </td><td> everyone </td>
      </tr>
      <tr>
	<td class="code"> <code>zip:</code> </td><td> zip (postal) code of hometown </td><td> students </td>
      </tr>
    </table>
    
    <p>Spaces after the colon (&ldquo;:&rdquo;) in a label are optional, but you cannot put a space between the label and the colon.</p>
    <br>
    
    <h4>Parentheses</h4>
    <p>With the tools we have thus far, there are still some searches which would be difficult or annoying to do. For example, try to find all the people named Ephraim who live in the former freshman dorms that are now upperclass dorms (East, Fayerweather, Morgan, Lehman). Since the AND operators take precedence over the OR operators, we would have to type:</p>
    <pre class="code">name:Ephraim &amp; dorm:Lehman, name:Ephraim &amp; dorm:Morgan, name:Ephraim &amp; dorm:Fayerweather, name:Ephraim &amp; dorm:East</pre>
    <p>I can tell you from experience (having just typed this), that it&rsquo;s a pain. Instead, let&rsquo;s use parentheses and do an equivalent search:</p>
    <pre class="code">name:Ephraim &amp; dorm:(Lehman, Morgan, Fayerweather, East)</pre>
    <p>That was not quite as bad. You&rsquo;ll notice that, beyond the inclusion of parentheses, we&rsquo;ve also made use of the fact that a label applied to a parenthesized subquery is applied to each of the terms inside that query. This is very handy, since it requires writing the label just once... In addition, you can nest parentheses as many times as you&rsquo;d like and put spaces between parentheses and their contained search terms: </p>
    <pre class="code">name:(( Ephraim, Mark ) &amp; ( Williams, Hopkins) )</pre>
    <br>
    
    <h4>Precedence of operators</h4>
    <p>The operators discussed above group adjacent search terms in this order.</p>
    <ol>
      <li class="level1"><div class="li"> <code>&ldquo;&rdquo;</code> &mdash; quotes</div>
      </li>
      <li class="level1"><div class="li"> <code>()</code> &mdash; parentheses</div>
      </li>
      <li class="level1"><div class="li"> <code>:</code> &mdash; labels</div>
      </li>
      <li class="level1"><div class="li"> <code>&amp; </code> &mdash; ampersand and space (AND)</div>
      </li>
      <li class="level1"><div class="li"> <code>|,</code> &mdash; pipe and comma (OR)</div>
      </li>
    </ol>
    <br>

    <!--
    <h3>Viewing results</h3>
    <p>You can choose how to view the results with the popup menu next to the search box. Results can be displayed in a table as a list of people without pictures or as mini address cards with pictures. The default is to choose automatically between picture and list view based on the number of results.</p>
    <p>Clicking on a person&rsquo;s name or picture in a list of results will display his or her full information. Additionally, when the number of people matching your search has reduced to one, the full information for that person will be displayed.</p>
    <br>
    -->

    <!--
    <h3>Known Bugs</h3>
    <p>Live search occasionally will display the desired results and then replace them with a larger, less narrowed set of results. This is a basic flaw in how the live search functions, which does not account for the fact that queries with large numbers of results will take longer to return that a query with fewer results. (In fact, something of a race condition occurs.) Usually, deleting a character from your search and retyping it fixes the results, but if the problem persists, please use the static search. Fixing this does not have high priority right now, since static search is often easier to use anyway.</p>
    -->
    
    <hr>
    <div class="footnotes">
      <div class="fn"><a href="#fnt__1" id="fn__1" name="fn__1" class="fn_bot">1)</a> 
	The <acronym title="Williams Students Online">WSO</acronym> Facebook actually predates Facebook.com by a bit and has been called &ldquo;the Facebook&rdquo; since its inception. To distinguish it from Facebook.com, which is commonly referred to as &ldquo;Facebook,&rdquo; refer to the <acronym title="Williams Students Online">WSO</acronym> Facebook as &ldquo;the <acronym title="Williams Students Online">WSO</acronym> Facebook,&rdquo; or &ldquo;the Facebook,&rdquo; for short.
      </div>
    </div>
  </article></section>
</div>
